
{
    "id": "5f80124f-f081-4376-8581-e5ed9d8ee61d",
    "owner_id": "8c050f0b-901e-4731-a721-f929d25b1366",
    "parent_id": null,
    "slug": "e-se-eu-te-contar-como-desenvolvi-uma-solucao-recentemente-no-meu-dormitorio-usando-nodejs-e-reactjs",
    "title": "ü§îE SE EU TE CONTAR COMO DESENVOLVI UMA SOLU√á√ÉO RECENTEMENTE NO ‚ÄúMEU‚Äù DORMIT√ìRIO USANDO Nodejs e Reactjs",
    "body": "H√° um ano pensei em resolver um problema no dormit√≥rio da universidade em que estudo (`R√∫ssia`).\n Usando algumas das `habilidades` que fui adquirindo ao longo do tempo, felizmente tornou-se poss√≠vel.\n \n## Como tudo come√ßou?\n No dormit√≥rio aonde estou alojado vive muitos `estrangeiros` e eu sou um deles. \n Mas durante os meus primeiros anos aqui no dormit√≥rio, eu enfrentei algumas `dificuldades` que n√£o queria que os pr√≥ximos/atuais `estudantes estrangeiros` passassem. \n Por esse motivo tive uma ideia e creio que √©/ser√° √∫til.\n Mas antes por√©m, deixa-me xplicar qual √©/era o problema‚Ä¶\n\n ## Problema:\n  Quando os estrangeiros chegam no dormit√≥rio (nos seus primeiros anos), sabendo que ainda n√£o dominam o idioma, fica complicado para eles a `comunica√ß√£o`, principalmente quando querem explicar algo para algu√©m.\n  Normalmente nos dormit√≥rios (c√° na `R√∫ssia`) existem `Profissionais T√©cnicos (Eletricistas e Encanadores)`. Eles s√£o respons√°veis pela resolu√ß√£o de todos problemas t√©cnicos que acontecem aqui no dormit√≥rio, mas isso funciona da seguinte maneira‚Ä¶\n\n  ### Ex:\n   `Estudante` est√° com problema na l√¢mpada do seu quarto. Ele deve fazer o seguinte:\n- Ir at√© os/as vigilantes do dormit√≥rio\n- Explicar o problema\n- Pedir o livro de apontamento de problemas\n- Escrever o problema `em Russo` no livro (`explicar detalhadamente`), colocando o andar em que est√°, o n√∫mero do quarto e etc. \n- E esperar at√© o dia seguinte ou um outro dia em que o T√©cnico ir√° trabalhar, para que o problema seja resolvido.\n\n## RESOLU√á√ÉO DO PROBLEMA\n#### Ent√£o eu tive a seguinte ideia:\n> E se eu criasse um App (Web), aonde os estudantes n√£o precisassem fazer todo o processo acima citado.\n\n#### Neste caso o App funcionar√° da seguinte maneira:\n- O estudante cria uma `conta`.\n- Ap√≥s a cria√ß√£o da conta, ele ter√° a possibilidade de reportar o problema a partir do App, sem precisar passar por todo aquele processo, que chega a ser muito `complicado` para quem ainda n√£o tem o dom√≠nio do idioma. \n\n#### Por exemplo:\n       Fazer fotos do local/material danificado (l√¢mpada, porta, tomada etc).\n       Escrever detalhadamente sobre o problema (EM QUALQUER IDIOMA).\n       Especificar o n√∫mero do andar, do bloco e do quarto.\n Ap√≥s a reportagem do problema.\n Esses dados ser√£o enviados ao `T√©cnico`, que por sua vez tamb√©m ter√° uma `conta`.\n\n#### E o T√©cnico poder√°:\n- Receber estes problemas reportados, mas `em RUSSO`.\n- Poder√° n√£o precisar sair de casa para saber se foi registrado algum problema.\n- Caso for registrado algum problema, ele poder√° analizar e estar preparado para resolv√™-lo.\n- E ap√≥s resolver o problema, marca como resolvido e o Estudante nota pelo Status do problema em sua conta (`Problema Resolvido`).\n\n## Uma vis√£o geral das ferramentas e tecnologias que usei:\n### Backend\n- ### Node.js + Fastify\n    > Criei rotas para `reportar`, `buscar`, `resolver` e `listar` problemas reportados.\n- ### Drizzle ORM + PostgreSQL\n    > Gerenciei as `Tabelas` e `resolu√ß√µes` dos problemas reportados com o Drizzle, que por sua vez tamb√©m  gerou as migra√ß√µes.\n- ### Docker e NEON para Banco de Dados\n    > Usei o `Docker` localmente para criar e gerenciar inst√¢ncias PostgreSQL durante o desenvolvimento.\n    > O `Neon` por ser uma das muitas solu√ß√µes PostgreSQL (com plano gratuito), optei para usar em produ√ß√£o.\n\n### Frontend\n- ### Reactjs\n- ### Clerk (`para autentica√ß√£o`)\n    > Usei uma funcionalidade do `Clerk` que me permitiu criar restri√ß√µes de usu√°rios a partir do email, podendo assim dar acesso para `Cadastro` apenas aos estudantes do \"meu\" Dormit√≥rio.\n- ### Cloudinary \n    > Enviei para o `Cloudinary` as imagens reportadas pelos usu√°rios, para me retornar URL p√∫blicas e salvar no `Banco de Dados` para serem exibidas no `frontend`.\n- ### Google Translate API\n    > Tal como descrevi acima, uma das principais funcionalidades seria o App suportar multiplos idiomas. Ent√£o optei por traduzir as descri√ß√µes dos problemas para Russo ao serem exibidas na conta dos `T√©cnicos`.\n\n> ## Todas as ferramentas e servi√ßos que usei t√™m planos gratuitos.\n> ## Fiz o deploy do `Backend` na `Vercel` e do `Frontend` na `Netlify`.\n> ## Apresentei o projeto a dire√ß√£o do Dormit√≥rio, foi aceite e est√° sendo utilizado atualmente.\n\n<div align=\"center\">\n     <img src=\"https://res.cloudinary.com/digomvyrv/image/upload/v1732106040/kplqtmtcrs4wamhpujbb.png\" alt=\"Home screen\" width=\"80%\">\n    <div style=\"display: flex; justify-content: center\">\n          <img src=\"https://res.cloudinary.com/digomvyrv/image/upload/v1732106040/westvxg8lw8w381m4tha.png\" alt=\"Problem not solved yet\" width=\"40%\">\n          <img src=\"https://res.cloudinary.com/digomvyrv/image/upload/v1732106040/od8u2j2ndosy4kbrzjsc.png\" alt=\"Problem solved\" width=\"40%\">\n    </div>\n</div>",
    "status": "published",
    "type": "content",
    "source_url": null,
    "created_at": "2024-11-20T12:52:40.340Z",
    "updated_at": "2024-11-20T12:52:40.340Z",
    "published_at": "2024-11-20T12:52:40.348Z",
    "deleted_at": null,
    "owner_username": "inacio000",
    "tabcoins": 30,
    "tabcoins_credit": 32,
    "tabcoins_debit": -3,
    "children_deep_count": 10
}