{"id": "9124f5db-cef9-4521-98e6-5bfa8f336a09", "owner_id": "1b8bf814-0654-45fb-b9b9-9fbcec182833", "parent_id": null, "slug": "extension-methods-em-c-e-prototypes-em-javascript-olha-essa-similaridade-incrivel", "title": "Extension Methods em C# e Prototypes em JavaScript: Olha essa similaridade INCR\u00cdVEL!", "body": "Bora falar sobre uma t\u00e9cnica poderosa (acho que nem tanto, mas \u00e9 legal) de programa\u00e7\u00e3o? Hoje o assunto \u00e9 **Extension Methods** no C# e **Prototypes** no JavaScript.\n\n## Extension Methods em C#\n\nNo C#, os **Extension Methods** permitem adicionar m\u00e9todos a tipos j\u00e1 existentes sem alterar o c\u00f3digo original. Olha este exemplo:\n\n```csharp\nvar text = \"C# Extension methods\";\ntext.log();\n\npublic static class InjectString {\n    public static void log(this string content) {\n        Console.WriteLine(content);\n    }\n}\n```\n> Se quiser testar: [dotnetfiddle.net](https://dotnetfiddle.net/RnP1ZL)\n\nAqui, `log()` vira um m\u00e9todo de string, sem precisar alterar a classe `string`. Isso funciona para quase qualquer tipo (bem, dynamic n\u00e3o!)\n\n\n# Prototypes em JavaScript \n\nJ\u00e1 no JavaScript, podemos usar Prototypes para fazer algo parecido. Olha pra tu v\u00ea \ud83d\ude01:\n\n```js\nString.prototype.log = function() {\n    console.log(this.valueOf());\n}\n\nvar text = \"JavaScript Extension methods\";\ntext.log();\n```\n> Se quiser testar: [playcode.io](https://playcode.io/2158765)\n\nAgora, qualquer string tamb\u00e9m tem o m\u00e9todo log(). \ud83d\udd25\n\n# E no TypeScript? \ud83e\udd14\n\nNo TypeScript, usar Prototypes \u00e9 meio merda, porque voc\u00ea vai ter que abrir m\u00e3o de tipagem, e muitas vezes vai ser preciso lan\u00e7ar um `as any`. Ent\u00e3o, n\u00e3o \u00e9 t\u00e3o direto como no C#, mas \u00e9 poss\u00edvel.\n\n# Resumo Final\n\n- C#: Flex\u00edvel e seguro \u2014 funciona para quase qualquer tipo, exceto dynamic.\n- JavaScript: Prototypes s\u00e3o poderosos, mas em TypeScript, exigem um pouco de \"gambiarra\" (a de lei n\u00e9 pai \ud83d\ude01).\n\nEsse \u00e9 um post beeem melhor constru\u00eddo, de um post que fiz no linkedin, mas caso queira, pode acomapnha-lo aqui: [Linkedin: Extension Methods e Prototype](https://www.linkedin.com/posts/andreluizss_bem-que-c-%C3%A9-minha-linguagem-favorita-todo-activity-7264444365043847168-S5Xr?utm_source=share&utm_medium=member_desktop)\n\n#### Abaixo se quiser (s\u00f3 se quiser!) me apoiar, *meu projeto precisa desse alcance pra quando for lan\u00e7ado*. Ent\u00e3o vou deixar abaixo minhas redes, obrigado! \ud83d\ude01\n>  Caso queira acompanhar o projeto [Dicion\u00e1rio do beb\u00ea - Implementando API do Stripe em V](https://www.tabnews.com.br/Andreldev/buildinpublic-implementando-api-do-stripe-em-v-para-o-dicionario-do-bebe)\n>  Caso queira saber sobre o WebHulkTest (Hulk esmaga!!) [WebHulkTest](https://www.tabnews.com.br/Andreldev/pitch-webhulktest-teste-suas-integracoes-com-facilidade)\n> Abaixo as minhas redes, se quiser ver eu postando algo mais... *E eu n\u00e3o tenho nenhuma experi\u00eancia com isso.*\n> \n> Linkedin: [Andr\u00e9 Luiz](https://www.linkedin.com/in/andreluizss/)\n> Youtube: [@Ddiidev](https://www.youtube.com/@Ddiidev)\n> Github: [@Ddiidev](https://github.com/Ddiidev)\n> X: [@luizdidev](https://x.com/luizdidev)", "status": "published", "type": "content", "source_url": null, "created_at": "2024-11-20T16:39:14.342Z", "updated_at": "2024-11-20T16:39:14.342Z", "published_at": "2024-11-20T16:39:14.347Z", "deleted_at": null, "owner_username": "Andreldev", "tabcoins": 6, "tabcoins_credit": 5, "tabcoins_debit": 0, "children_deep_count": 10}